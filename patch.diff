From a251a4b138d9946e6bea1e1dcfbf20e0691f0d94 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?DESKTOP-IEKEC4V=5C=EA=B9=80=EC=84=B1=EB=AF=BC?=
 <sungmin48601@gmail.com>
Date: Thu, 26 Sep 2024 23:26:38 +0900
Subject: [PATCH] no message

---
 .../kh/project/common/config/DBConfig.java    | 100 ------------------
 .../src/main/resources/application.properties |  18 ----
 .../src/main/resources/messages.properties    |   2 -
 3 files changed, 120 deletions(-)
 delete mode 100644 boardProject/src/main/java/edu/kh/project/common/config/DBConfig.java
 delete mode 100644 boardProject/src/main/resources/application.properties
 delete mode 100644 boardProject/src/main/resources/messages.properties

diff --git a/boardProject/src/main/java/edu/kh/project/common/config/DBConfig.java b/boardProject/src/main/java/edu/kh/project/common/config/DBConfig.java
deleted file mode 100644
index 5f7d58c..0000000
--- a/boardProject/src/main/java/edu/kh/project/common/config/DBConfig.java
+++ /dev/null
@@ -1,100 +0,0 @@
-package edu.kh.project.common.config;
-
-import javax.sql.DataSource;
-
-import org.apache.ibatis.session.SqlSessionFactory;
-import org.mybatis.spring.SqlSessionFactoryBean;
-import org.mybatis.spring.SqlSessionTemplate;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-import org.springframework.context.ApplicationContext;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.context.annotation.PropertySource;
-import org.springframework.jdbc.datasource.DataSourceTransactionManager;
-
-import com.zaxxer.hikari.HikariConfig;
-import com.zaxxer.hikari.HikariDataSource;
-
-/* @Configuration 어노테이션
- * - 서버 실행 시 자동으로 객체로 만들어져
- *   내부에 작성된 메서드를 모두 실행하게함
- * 
- * @Bean 어노테이션
- * - 메서드 수행 결과로 반환 객체들을 bean으로 등록함
- *  + 메서드 내부 코드 == bean 설정 코드
- *  
- * @PropertySource :  properties 파일의 내용을 이용하겠다는 어노테이션
- */
-
-@Configuration
-@PropertySource("classpath:/config.properties")
-//config 파일을 읽어옴.
-public class DBConfig {
-
-	@Autowired
-	private ApplicationContext applicationContext;
-
-	// @Bean
-	// - 개발자가 수동으로 bean을 등록하는 어노테이션
-	// - @Bean 어노테이션이 작성된 메서드에서 반환된 객체는
-	// Spring Container가 관리함(IOC)
-
-	@Bean
-	// @ConfigurationProperties(prefix = "spring.datasource.hikari")
-	// properties 파일의 내용을 이용해서 생성되는 bean을 설정하는 어노테이션
-	// prefix를 지정하여 spring.datasource.hikari으로 시작하는 설정을 모두 적용
-	@ConfigurationProperties(prefix = "spring.datasource.hikari")
-	public HikariConfig hikariConfig() {
-		return new HikariConfig();
-	}
-
-	@Bean
-	public DataSource dataSource(HikariConfig config) {
-		DataSource dataSource = new HikariDataSource(config);
-		return dataSource;
-	}
-
-////////////////////////////Mybatis 설정 추가 ////////////////////////////
-
-// sqlSession : DB 연결 + SQL파일 위치 등록  
-//              +  마이바티스 설정  적용 + 클래스 별칭 등록
-	
-	
-// SqlSessionFactory : SqlSession을 만드는 객체 
-	@Bean
-	public SqlSessionFactory sessionFactory(DataSource dataSource) throws Exception {
-		SqlSessionFactoryBean sessionFactoryBean = new SqlSessionFactoryBean();
-
-		sessionFactoryBean.setDataSource(dataSource);
-
-		// 매퍼 파일이 모여있는 경로 지정
-		sessionFactoryBean.setMapperLocations(applicationContext.getResources("classpath:/mappers/**.xml"));
-
-	// 별칭을 지정해야하는 DTO가 모여있는 패키지 지정
-	// -> 해당 패키지에 있는 모든 클래스가 클래스명으로 별칭이 지정됨
-		sessionFactoryBean.setTypeAliasesPackage("edu.kh.project");
-		
-		//별칭 지정 전 -> edu.kh.demo.dto.User 라고 작성
-		// 별칭 지정 후-> User                 라고만 작성
-
-		// 마이바티스 설정 파일 경로 지정
-		sessionFactoryBean.setConfigLocation(applicationContext.getResource("classpath:mybatis-config.xml"));
-
-		// SqlSession 객체 반환
-		return sessionFactoryBean.getObject();
-	}
-
-	// SqlSessionTemplate :  기본 SQL 실행 + 트랜잭션 처리
-	@Bean
-	public SqlSessionTemplate sqlSessionTemplate(SqlSessionFactory sessionFactory) {
-		return new SqlSessionTemplate(sessionFactory);
-	}
-
-	// DataSourceTransactionManager : 트랜잭션 매니저
-	@Bean
-	public DataSourceTransactionManager dataSourceTransactionManager(DataSource dataSource) {
-		return new DataSourceTransactionManager(dataSource);
-	}
-
-}
diff --git a/boardProject/src/main/resources/application.properties b/boardProject/src/main/resources/application.properties
deleted file mode 100644
index 6c885e9..0000000
--- a/boardProject/src/main/resources/application.properties
+++ /dev/null
@@ -1,18 +0,0 @@
-spring.application.name=boardProject
-
-server.port=80
-
-
-
-#로깅 레벨 지정
-logging.level.edu.kh.project=debug
-
-
-
-#URL에 jsessionid를 붙이지 않게하는 속성
-server.servlet.session.tracking-modes=cookie
-
-#Spring DevTools(자동 리로드, 서버 재시작) 설정
-spring.devtools.livereload.enabled=true
-spring.devtools.restart.enabled=true
-spring.thymeleaf.cache=false
diff --git a/boardProject/src/main/resources/messages.properties b/boardProject/src/main/resources/messages.properties
deleted file mode 100644
index 0bf037b..0000000
--- a/boardProject/src/main/resources/messages.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-app.name = "회원제 게시판 프로젝트"
-user.default.image= /images/user.gif
\ No newline at end of file
-- 
2.46.0.windows.1

